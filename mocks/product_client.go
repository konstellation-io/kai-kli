// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	configuration "github.com/konstellation-io/kli/internal/services/configuration"

	mock "github.com/stretchr/testify/mock"
)

// MockProductClient is an autogenerated mock type for the ProductClient type
type MockProductClient struct {
	mock.Mock
}

type MockProductClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockProductClient) EXPECT() *MockProductClient_Expecter {
	return &MockProductClient_Expecter{mock: &_m.Mock}
}

// CreateProduct provides a mock function with given fields: server, name, description
func (_m *MockProductClient) CreateProduct(server *configuration.Server, name string, description string) error {
	ret := _m.Called(server, name, description)

	var r0 error
	if rf, ok := ret.Get(0).(func(*configuration.Server, string, string) error); ok {
		r0 = rf(server, name, description)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockProductClient_CreateProduct_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateProduct'
type MockProductClient_CreateProduct_Call struct {
	*mock.Call
}

// CreateProduct is a helper method to define mock.On call
//   - server *configuration.Server
//   - name string
//   - description string
func (_e *MockProductClient_Expecter) CreateProduct(server interface{}, name interface{}, description interface{}) *MockProductClient_CreateProduct_Call {
	return &MockProductClient_CreateProduct_Call{Call: _e.mock.On("CreateProduct", server, name, description)}
}

func (_c *MockProductClient_CreateProduct_Call) Run(run func(server *configuration.Server, name string, description string)) *MockProductClient_CreateProduct_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*configuration.Server), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *MockProductClient_CreateProduct_Call) Return(_a0 error) *MockProductClient_CreateProduct_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockProductClient_CreateProduct_Call) RunAndReturn(run func(*configuration.Server, string, string) error) *MockProductClient_CreateProduct_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockProductClient creates a new instance of MockProductClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockProductClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockProductClient {
	mock := &MockProductClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
