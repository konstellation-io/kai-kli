name: Quality

on:
  push:
    branches-ignore:
      - "v*"
    tags-ignore:
      - "v*"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.x'
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53.3
          working-directory: .
          args: --timeout 5m
          skip-pkg-cache: true
          skip-build-cache: true

  tests:
    strategy:
      matrix:
        go-version: ['1.20.x']
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run tests
        run: |
          go test -coverprofile="${{ matrix.platform }}_coverage.out" -covermode=atomic -coverpkg=./... ./...
          go tool cover -func="${{ matrix.platform }}_coverage.out"
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}_coverage
          path: ${{ matrix.platform }}_coverage.out

  coverage:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Fetch unshallow
        run: git fetch --prune --unshallow
      - name: Download coverage report
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest_coverage
      # - name: Scan with SonarCloud
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
