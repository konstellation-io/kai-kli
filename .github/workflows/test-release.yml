name: Test and Release

on:
  push:
    branches-ignore:
      - "v*"
    tags-ignore:
      - v*

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Go lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: .
          args: --timeout 5m

  tests:
    strategy:
      matrix:
        go-version: [ 1.20.x ]
        platform: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run unit tests
        run: go test ./... -cover -v -coverpkg=./... -coverprofile="coverage-unit.out" --tags=unit
        working-directory: ./

      - name: Run integration tests
        run: go test ./... -cover -v -coverpkg=./... -coverprofile="coverage-integration.out" --tags=integration
        working-directory: ./

      - name: Upload unit coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.platform }}
          path: |
            ${{ matrix.platform }}/coverage-unit.out
            ${{ matrix.platform }}/coverage-integration.out

  coverage:
    strategy:
      matrix:
        go-version: [ 1.20.x ]
        platform: [ ubuntu-latest ]
    runs-on: ${{ matrix.platform }}
    needs: tests
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3
      - run: git fetch --prune --unshallow

      - name: Download unit coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report-${{ matrix.platform }}
          path: |
            ${{ matrix.platform }}

      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: ${{ matrix.platform }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    runs-on: ubuntu-latest
    if : github.ref_name == 'main'
    needs: coverage
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
    
      - name: Nyx publish
        id: nyx-publish
        uses: mooltiverse/nyx-github-action@main
        with:
          command: 'publish'
        env:
          GH_TOKEN: ${{ secrets.PAT }}
      